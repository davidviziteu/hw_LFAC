Terminals unused in grammar

    CONST
    OP_STR


State 82 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 104 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 5 shift/reduce


Grammar

    0 $accept: progr $end

    1 progr: decl_gl clasa fnc bloc

    2 fnc: functie
    3    | fnc functie

    4 eval_exp: eval_exp '+' eval_exp
    5         | eval_exp '-' eval_exp
    6         | eval_exp '*' eval_exp
    7         | eval_exp '/' eval_exp
    8         | eval_exp '%' eval_exp
    9         | '(' eval_exp ')'
   10         | '-' eval_exp
   11         | INT
   12         | ID
   13         | ID '[' NR ']'

   14 lista_param: TIP ID
   15            | lista_param ',' TIP ID

   16 functie: TIP ID '(' lista_param ')' '{' list '}'
   17        | TIP ID '(' ')' '{' list '}'

   18 clasa: CLASS ID '{' VIS ':' decl_cl fnc '}'
   19      | CLASS ID '{' VIS ':' decl_cl '}'

   20 decl_cl: declaratiecl ';'
   21        | decl_cl declaratiecl ';'

   22 declaratiecl: TIP ID
   23             | TIP ID '(' lista_param ')'
   24             | TIP ID '(' ')'

   25 bloc: BGIN list END

   26 list: statement ';'
   27     | list statement ';'

   28 bool: BOOL
   29     | operatii_binare

   30 operatii_binare: ID OP_BIN ID

   31 operatii: ID OP ID
   32         | ID OP NR
   33         | NR OP ID
   34         | NR OP NR
   35         | ID OP operatii
   36         | NR OP operatii

   37 decl_gl: declaratie ';'
   38        | decl_gl declaratie ';'

   39 declaratie: TIP ID
   40           | TIP ID '(' lista_param ')'
   41           | TIP ID '(' ')'

   42 statement: ID ASSIGN eval_exp
   43          | ID '(' lista_apel ')'
   44          | IF '(' bool ')' '{' list '}'
   45          | WHILE '(' bool ')' '{' list '}'
   46          | FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | TIP ID

   48 lista_apel: NR
   49           | FLOAT
   50           | functie
   51           | ID
   52           | lista_apel ',' NR


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 8
    '(' (40) 9 16 17 23 24 40 41 43 44 45 46
    ')' (41) 9 16 17 23 24 40 41 43 44 45 46
    '*' (42) 6
    '+' (43) 4
    ',' (44) 15 52
    '-' (45) 5 10
    '/' (47) 7
    ':' (58) 18 19
    ';' (59) 20 21 26 27 37 38 46
    '[' (91) 13
    ']' (93) 13
    '{' (123) 16 17 18 19 44 45 46
    '}' (125) 16 17 18 19 44 45 46
    error (256)
    ID <strval> (258) 12 13 14 15 16 17 18 19 22 23 24 30 31 32 33 35 39 40 41 42 43 46 47 51
    TIP <strval> (259) 14 15 16 17 22 23 24 39 40 41 47
    BGIN <strval> (260) 25
    END <strval> (261) 25
    CONST <strval> (262)
    ASSIGN <strval> (263) 42 46
    VIS <strval> (264) 18 19
    CLASS <strval> (265) 18 19
    OP <_char> (266) 31 32 33 34 35 36
    IF <_char> (267) 44
    WHILE <_char> (268) 45
    FOR <_char> (269) 46
    OP_BIN <_char> (270) 30
    OP_STR <_char> (271)
    BOOL <_char> (272) 28
    INT <_char> (273) 11
    FLOAT <strval> (274) 49
    NR <strval> (275) 13 32 33 34 36 48 52


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    progr (36)
        on left: 1
        on right: 0
    fnc (37)
        on left: 2 3
        on right: 1 3 18
    eval_exp <intval> (38)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 4 5 6 7 8 9 10 42
    lista_param (39)
        on left: 14 15
        on right: 15 16 23 40
    functie (40)
        on left: 16 17
        on right: 2 3 50
    clasa (41)
        on left: 18 19
        on right: 1
    decl_cl (42)
        on left: 20 21
        on right: 18 19 21
    declaratiecl (43)
        on left: 22 23 24
        on right: 20 21
    bloc (44)
        on left: 25
        on right: 1
    list (45)
        on left: 26 27
        on right: 16 17 25 27 44 45 46
    bool (46)
        on left: 28 29
        on right: 44 45
    operatii_binare (47)
        on left: 30
        on right: 29 46
    operatii (48)
        on left: 31 32 33 34 35 36
        on right: 35 36 46
    decl_gl (49)
        on left: 37 38
        on right: 1 38
    declaratie (50)
        on left: 39 40 41
        on right: 37 38
    statement (51)
        on left: 42 43 44 45 46 47
        on right: 26 27
    lista_apel (52)
        on left: 48 49 50 51 52
        on right: 43 52


State 0

    0 $accept: . progr $end
    1 progr: . decl_gl clasa fnc bloc
   37 decl_gl: . declaratie ';'
   38        | . decl_gl declaratie ';'
   39 declaratie: . TIP ID
   40           | . TIP ID '(' lista_param ')'
   41           | . TIP ID '(' ')'

    TIP  shift, and go to state 1

    progr       go to state 2
    decl_gl     go to state 3
    declaratie  go to state 4


State 1

   39 declaratie: TIP . ID
   40           | TIP . ID '(' lista_param ')'
   41           | TIP . ID '(' ')'

    ID  shift, and go to state 5


State 2

    0 $accept: progr . $end

    $end  shift, and go to state 6


State 3

    1 progr: decl_gl . clasa fnc bloc
   18 clasa: . CLASS ID '{' VIS ':' decl_cl fnc '}'
   19      | . CLASS ID '{' VIS ':' decl_cl '}'
   38 decl_gl: decl_gl . declaratie ';'
   39 declaratie: . TIP ID
   40           | . TIP ID '(' lista_param ')'
   41           | . TIP ID '(' ')'

    TIP    shift, and go to state 1
    CLASS  shift, and go to state 7

    clasa       go to state 8
    declaratie  go to state 9


State 4

   37 decl_gl: declaratie . ';'

    ';'  shift, and go to state 10


State 5

   39 declaratie: TIP ID .  [';']
   40           | TIP ID . '(' lista_param ')'
   41           | TIP ID . '(' ')'

    '('  shift, and go to state 11

    $default  reduce using rule 39 (declaratie)


State 6

    0 $accept: progr $end .

    $default  accept


State 7

   18 clasa: CLASS . ID '{' VIS ':' decl_cl fnc '}'
   19      | CLASS . ID '{' VIS ':' decl_cl '}'

    ID  shift, and go to state 12


State 8

    1 progr: decl_gl clasa . fnc bloc
    2 fnc: . functie
    3    | . fnc functie
   16 functie: . TIP ID '(' lista_param ')' '{' list '}'
   17        | . TIP ID '(' ')' '{' list '}'

    TIP  shift, and go to state 13

    fnc      go to state 14
    functie  go to state 15


State 9

   38 decl_gl: decl_gl declaratie . ';'

    ';'  shift, and go to state 16


State 10

   37 decl_gl: declaratie ';' .

    $default  reduce using rule 37 (decl_gl)


State 11

   14 lista_param: . TIP ID
   15            | . lista_param ',' TIP ID
   40 declaratie: TIP ID '(' . lista_param ')'
   41           | TIP ID '(' . ')'

    TIP  shift, and go to state 17
    ')'  shift, and go to state 18

    lista_param  go to state 19


State 12

   18 clasa: CLASS ID . '{' VIS ':' decl_cl fnc '}'
   19      | CLASS ID . '{' VIS ':' decl_cl '}'

    '{'  shift, and go to state 20


State 13

   16 functie: TIP . ID '(' lista_param ')' '{' list '}'
   17        | TIP . ID '(' ')' '{' list '}'

    ID  shift, and go to state 21


State 14

    1 progr: decl_gl clasa fnc . bloc
    3 fnc: fnc . functie
   16 functie: . TIP ID '(' lista_param ')' '{' list '}'
   17        | . TIP ID '(' ')' '{' list '}'
   25 bloc: . BGIN list END

    TIP   shift, and go to state 13
    BGIN  shift, and go to state 22

    functie  go to state 23
    bloc     go to state 24


State 15

    2 fnc: functie .

    $default  reduce using rule 2 (fnc)


State 16

   38 decl_gl: decl_gl declaratie ';' .

    $default  reduce using rule 38 (decl_gl)


State 17

   14 lista_param: TIP . ID

    ID  shift, and go to state 25


State 18

   41 declaratie: TIP ID '(' ')' .

    $default  reduce using rule 41 (declaratie)


State 19

   15 lista_param: lista_param . ',' TIP ID
   40 declaratie: TIP ID '(' lista_param . ')'

    ')'  shift, and go to state 26
    ','  shift, and go to state 27


State 20

   18 clasa: CLASS ID '{' . VIS ':' decl_cl fnc '}'
   19      | CLASS ID '{' . VIS ':' decl_cl '}'

    VIS  shift, and go to state 28


State 21

   16 functie: TIP ID . '(' lista_param ')' '{' list '}'
   17        | TIP ID . '(' ')' '{' list '}'

    '('  shift, and go to state 29


State 22

   25 bloc: BGIN . list END
   26 list: . statement ';'
   27     | . list statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34

    list       go to state 35
    statement  go to state 36


State 23

    3 fnc: fnc functie .

    $default  reduce using rule 3 (fnc)


State 24

    1 progr: decl_gl clasa fnc bloc .

    $default  reduce using rule 1 (progr)


State 25

   14 lista_param: TIP ID .

    $default  reduce using rule 14 (lista_param)


State 26

   40 declaratie: TIP ID '(' lista_param ')' .

    $default  reduce using rule 40 (declaratie)


State 27

   15 lista_param: lista_param ',' . TIP ID

    TIP  shift, and go to state 37


State 28

   18 clasa: CLASS ID '{' VIS . ':' decl_cl fnc '}'
   19      | CLASS ID '{' VIS . ':' decl_cl '}'

    ':'  shift, and go to state 38


State 29

   14 lista_param: . TIP ID
   15            | . lista_param ',' TIP ID
   16 functie: TIP ID '(' . lista_param ')' '{' list '}'
   17        | TIP ID '(' . ')' '{' list '}'

    TIP  shift, and go to state 17
    ')'  shift, and go to state 39

    lista_param  go to state 40


State 30

   42 statement: ID . ASSIGN eval_exp
   43          | ID . '(' lista_apel ')'

    ASSIGN  shift, and go to state 41
    '('     shift, and go to state 42


State 31

   47 statement: TIP . ID

    ID  shift, and go to state 43


State 32

   44 statement: IF . '(' bool ')' '{' list '}'

    '('  shift, and go to state 44


State 33

   45 statement: WHILE . '(' bool ')' '{' list '}'

    '('  shift, and go to state 45


State 34

   46 statement: FOR . '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'

    '('  shift, and go to state 46


State 35

   25 bloc: BGIN list . END
   27 list: list . statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    END    shift, and go to state 47
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34

    statement  go to state 48


State 36

   26 list: statement . ';'

    ';'  shift, and go to state 49


State 37

   15 lista_param: lista_param ',' TIP . ID

    ID  shift, and go to state 50


State 38

   18 clasa: CLASS ID '{' VIS ':' . decl_cl fnc '}'
   19      | CLASS ID '{' VIS ':' . decl_cl '}'
   20 decl_cl: . declaratiecl ';'
   21        | . decl_cl declaratiecl ';'
   22 declaratiecl: . TIP ID
   23             | . TIP ID '(' lista_param ')'
   24             | . TIP ID '(' ')'

    TIP  shift, and go to state 51

    decl_cl       go to state 52
    declaratiecl  go to state 53


State 39

   17 functie: TIP ID '(' ')' . '{' list '}'

    '{'  shift, and go to state 54


State 40

   15 lista_param: lista_param . ',' TIP ID
   16 functie: TIP ID '(' lista_param . ')' '{' list '}'

    ')'  shift, and go to state 55
    ','  shift, and go to state 27


State 41

    4 eval_exp: . eval_exp '+' eval_exp
    5         | . eval_exp '-' eval_exp
    6         | . eval_exp '*' eval_exp
    7         | . eval_exp '/' eval_exp
    8         | . eval_exp '%' eval_exp
    9         | . '(' eval_exp ')'
   10         | . '-' eval_exp
   11         | . INT
   12         | . ID
   13         | . ID '[' NR ']'
   42 statement: ID ASSIGN . eval_exp

    ID   shift, and go to state 56
    INT  shift, and go to state 57
    '-'  shift, and go to state 58
    '('  shift, and go to state 59

    eval_exp  go to state 60


State 42

   16 functie: . TIP ID '(' lista_param ')' '{' list '}'
   17        | . TIP ID '(' ')' '{' list '}'
   43 statement: ID '(' . lista_apel ')'
   48 lista_apel: . NR
   49           | . FLOAT
   50           | . functie
   51           | . ID
   52           | . lista_apel ',' NR

    ID     shift, and go to state 61
    TIP    shift, and go to state 13
    FLOAT  shift, and go to state 62
    NR     shift, and go to state 63

    functie     go to state 64
    lista_apel  go to state 65


State 43

   47 statement: TIP ID .

    $default  reduce using rule 47 (statement)


State 44

   28 bool: . BOOL
   29     | . operatii_binare
   30 operatii_binare: . ID OP_BIN ID
   44 statement: IF '(' . bool ')' '{' list '}'

    ID    shift, and go to state 66
    BOOL  shift, and go to state 67

    bool             go to state 68
    operatii_binare  go to state 69


State 45

   28 bool: . BOOL
   29     | . operatii_binare
   30 operatii_binare: . ID OP_BIN ID
   45 statement: WHILE '(' . bool ')' '{' list '}'

    ID    shift, and go to state 66
    BOOL  shift, and go to state 67

    bool             go to state 70
    operatii_binare  go to state 69


State 46

   46 statement: FOR '(' . ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'

    ID  shift, and go to state 71


State 47

   25 bloc: BGIN list END .

    $default  reduce using rule 25 (bloc)


State 48

   27 list: list statement . ';'

    ';'  shift, and go to state 72


State 49

   26 list: statement ';' .

    $default  reduce using rule 26 (list)


State 50

   15 lista_param: lista_param ',' TIP ID .

    $default  reduce using rule 15 (lista_param)


State 51

   22 declaratiecl: TIP . ID
   23             | TIP . ID '(' lista_param ')'
   24             | TIP . ID '(' ')'

    ID  shift, and go to state 73


State 52

    2 fnc: . functie
    3    | . fnc functie
   16 functie: . TIP ID '(' lista_param ')' '{' list '}'
   17        | . TIP ID '(' ')' '{' list '}'
   18 clasa: CLASS ID '{' VIS ':' decl_cl . fnc '}'
   19      | CLASS ID '{' VIS ':' decl_cl . '}'
   21 decl_cl: decl_cl . declaratiecl ';'
   22 declaratiecl: . TIP ID
   23             | . TIP ID '(' lista_param ')'
   24             | . TIP ID '(' ')'

    TIP  shift, and go to state 74
    '}'  shift, and go to state 75

    fnc           go to state 76
    functie       go to state 15
    declaratiecl  go to state 77


State 53

   20 decl_cl: declaratiecl . ';'

    ';'  shift, and go to state 78


State 54

   17 functie: TIP ID '(' ')' '{' . list '}'
   26 list: . statement ';'
   27     | . list statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34

    list       go to state 79
    statement  go to state 36


State 55

   16 functie: TIP ID '(' lista_param ')' . '{' list '}'

    '{'  shift, and go to state 80


State 56

   12 eval_exp: ID .  ['+', '-', '*', '%', '/', ')', ';']
   13         | ID . '[' NR ']'

    '['  shift, and go to state 81

    $default  reduce using rule 12 (eval_exp)


State 57

   11 eval_exp: INT .

    $default  reduce using rule 11 (eval_exp)


State 58

    4 eval_exp: . eval_exp '+' eval_exp
    5         | . eval_exp '-' eval_exp
    6         | . eval_exp '*' eval_exp
    7         | . eval_exp '/' eval_exp
    8         | . eval_exp '%' eval_exp
    9         | . '(' eval_exp ')'
   10         | . '-' eval_exp
   10         | '-' . eval_exp
   11         | . INT
   12         | . ID
   13         | . ID '[' NR ']'

    ID   shift, and go to state 56
    INT  shift, and go to state 57
    '-'  shift, and go to state 58
    '('  shift, and go to state 59

    eval_exp  go to state 82


State 59

    4 eval_exp: . eval_exp '+' eval_exp
    5         | . eval_exp '-' eval_exp
    6         | . eval_exp '*' eval_exp
    7         | . eval_exp '/' eval_exp
    8         | . eval_exp '%' eval_exp
    9         | . '(' eval_exp ')'
    9         | '(' . eval_exp ')'
   10         | . '-' eval_exp
   11         | . INT
   12         | . ID
   13         | . ID '[' NR ']'

    ID   shift, and go to state 56
    INT  shift, and go to state 57
    '-'  shift, and go to state 58
    '('  shift, and go to state 59

    eval_exp  go to state 83


State 60

    4 eval_exp: eval_exp . '+' eval_exp
    5         | eval_exp . '-' eval_exp
    6         | eval_exp . '*' eval_exp
    7         | eval_exp . '/' eval_exp
    8         | eval_exp . '%' eval_exp
   42 statement: ID ASSIGN eval_exp .  [';']

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '%'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 42 (statement)


State 61

   51 lista_apel: ID .

    $default  reduce using rule 51 (lista_apel)


State 62

   49 lista_apel: FLOAT .

    $default  reduce using rule 49 (lista_apel)


State 63

   48 lista_apel: NR .

    $default  reduce using rule 48 (lista_apel)


State 64

   50 lista_apel: functie .

    $default  reduce using rule 50 (lista_apel)


State 65

   43 statement: ID '(' lista_apel . ')'
   52 lista_apel: lista_apel . ',' NR

    ')'  shift, and go to state 89
    ','  shift, and go to state 90


State 66

   30 operatii_binare: ID . OP_BIN ID

    OP_BIN  shift, and go to state 91


State 67

   28 bool: BOOL .

    $default  reduce using rule 28 (bool)


State 68

   44 statement: IF '(' bool . ')' '{' list '}'

    ')'  shift, and go to state 92


State 69

   29 bool: operatii_binare .

    $default  reduce using rule 29 (bool)


State 70

   45 statement: WHILE '(' bool . ')' '{' list '}'

    ')'  shift, and go to state 93


State 71

   46 statement: FOR '(' ID . ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'

    ASSIGN  shift, and go to state 94


State 72

   27 list: list statement ';' .

    $default  reduce using rule 27 (list)


State 73

   22 declaratiecl: TIP ID .  [';']
   23             | TIP ID . '(' lista_param ')'
   24             | TIP ID . '(' ')'

    '('  shift, and go to state 95

    $default  reduce using rule 22 (declaratiecl)


State 74

   16 functie: TIP . ID '(' lista_param ')' '{' list '}'
   17        | TIP . ID '(' ')' '{' list '}'
   22 declaratiecl: TIP . ID
   23             | TIP . ID '(' lista_param ')'
   24             | TIP . ID '(' ')'

    ID  shift, and go to state 96


State 75

   19 clasa: CLASS ID '{' VIS ':' decl_cl '}' .

    $default  reduce using rule 19 (clasa)


State 76

    3 fnc: fnc . functie
   16 functie: . TIP ID '(' lista_param ')' '{' list '}'
   17        | . TIP ID '(' ')' '{' list '}'
   18 clasa: CLASS ID '{' VIS ':' decl_cl fnc . '}'

    TIP  shift, and go to state 13
    '}'  shift, and go to state 97

    functie  go to state 23


State 77

   21 decl_cl: decl_cl declaratiecl . ';'

    ';'  shift, and go to state 98


State 78

   20 decl_cl: declaratiecl ';' .

    $default  reduce using rule 20 (decl_cl)


State 79

   17 functie: TIP ID '(' ')' '{' list . '}'
   27 list: list . statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34
    '}'    shift, and go to state 99

    statement  go to state 48


State 80

   16 functie: TIP ID '(' lista_param ')' '{' . list '}'
   26 list: . statement ';'
   27     | . list statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34

    list       go to state 100
    statement  go to state 36


State 81

   13 eval_exp: ID '[' . NR ']'

    NR  shift, and go to state 101


State 82

    4 eval_exp: eval_exp . '+' eval_exp
    5         | eval_exp . '-' eval_exp
    6         | eval_exp . '*' eval_exp
    7         | eval_exp . '/' eval_exp
    8         | eval_exp . '%' eval_exp
   10         | '-' eval_exp .  ['+', '-', '/', ')', ';']

    '*'  shift, and go to state 86
    '%'  shift, and go to state 87
    '/'  shift, and go to state 88

    '/'       [reduce using rule 10 (eval_exp)]
    $default  reduce using rule 10 (eval_exp)

    Conflict between rule 10 and token '+' resolved as reduce (%left '+').
    Conflict between rule 10 and token '-' resolved as reduce (%left '-').
    Conflict between rule 10 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 10 and token '%' resolved as shift ('-' < '%').


State 83

    4 eval_exp: eval_exp . '+' eval_exp
    5         | eval_exp . '-' eval_exp
    6         | eval_exp . '*' eval_exp
    7         | eval_exp . '/' eval_exp
    8         | eval_exp . '%' eval_exp
    9         | '(' eval_exp . ')'

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '%'  shift, and go to state 87
    '/'  shift, and go to state 88
    ')'  shift, and go to state 102


State 84

    4 eval_exp: . eval_exp '+' eval_exp
    4         | eval_exp '+' . eval_exp
    5         | . eval_exp '-' eval_exp
    6         | . eval_exp '*' eval_exp
    7         | . eval_exp '/' eval_exp
    8         | . eval_exp '%' eval_exp
    9         | . '(' eval_exp ')'
   10         | . '-' eval_exp
   11         | . INT
   12         | . ID
   13         | . ID '[' NR ']'

    ID   shift, and go to state 56
    INT  shift, and go to state 57
    '-'  shift, and go to state 58
    '('  shift, and go to state 59

    eval_exp  go to state 103


State 85

    4 eval_exp: . eval_exp '+' eval_exp
    5         | . eval_exp '-' eval_exp
    5         | eval_exp '-' . eval_exp
    6         | . eval_exp '*' eval_exp
    7         | . eval_exp '/' eval_exp
    8         | . eval_exp '%' eval_exp
    9         | . '(' eval_exp ')'
   10         | . '-' eval_exp
   11         | . INT
   12         | . ID
   13         | . ID '[' NR ']'

    ID   shift, and go to state 56
    INT  shift, and go to state 57
    '-'  shift, and go to state 58
    '('  shift, and go to state 59

    eval_exp  go to state 104


State 86

    4 eval_exp: . eval_exp '+' eval_exp
    5         | . eval_exp '-' eval_exp
    6         | . eval_exp '*' eval_exp
    6         | eval_exp '*' . eval_exp
    7         | . eval_exp '/' eval_exp
    8         | . eval_exp '%' eval_exp
    9         | . '(' eval_exp ')'
   10         | . '-' eval_exp
   11         | . INT
   12         | . ID
   13         | . ID '[' NR ']'

    ID   shift, and go to state 56
    INT  shift, and go to state 57
    '-'  shift, and go to state 58
    '('  shift, and go to state 59

    eval_exp  go to state 105


State 87

    4 eval_exp: . eval_exp '+' eval_exp
    5         | . eval_exp '-' eval_exp
    6         | . eval_exp '*' eval_exp
    7         | . eval_exp '/' eval_exp
    8         | . eval_exp '%' eval_exp
    8         | eval_exp '%' . eval_exp
    9         | . '(' eval_exp ')'
   10         | . '-' eval_exp
   11         | . INT
   12         | . ID
   13         | . ID '[' NR ']'

    ID   shift, and go to state 56
    INT  shift, and go to state 57
    '-'  shift, and go to state 58
    '('  shift, and go to state 59

    eval_exp  go to state 106


State 88

    4 eval_exp: . eval_exp '+' eval_exp
    5         | . eval_exp '-' eval_exp
    6         | . eval_exp '*' eval_exp
    7         | . eval_exp '/' eval_exp
    7         | eval_exp '/' . eval_exp
    8         | . eval_exp '%' eval_exp
    9         | . '(' eval_exp ')'
   10         | . '-' eval_exp
   11         | . INT
   12         | . ID
   13         | . ID '[' NR ']'

    ID   shift, and go to state 56
    INT  shift, and go to state 57
    '-'  shift, and go to state 58
    '('  shift, and go to state 59

    eval_exp  go to state 107


State 89

   43 statement: ID '(' lista_apel ')' .

    $default  reduce using rule 43 (statement)


State 90

   52 lista_apel: lista_apel ',' . NR

    NR  shift, and go to state 108


State 91

   30 operatii_binare: ID OP_BIN . ID

    ID  shift, and go to state 109


State 92

   44 statement: IF '(' bool ')' . '{' list '}'

    '{'  shift, and go to state 110


State 93

   45 statement: WHILE '(' bool ')' . '{' list '}'

    '{'  shift, and go to state 111


State 94

   46 statement: FOR '(' ID ASSIGN . ID ';' operatii_binare ';' operatii ')' '{' list '}'

    ID  shift, and go to state 112


State 95

   14 lista_param: . TIP ID
   15            | . lista_param ',' TIP ID
   23 declaratiecl: TIP ID '(' . lista_param ')'
   24             | TIP ID '(' . ')'

    TIP  shift, and go to state 17
    ')'  shift, and go to state 113

    lista_param  go to state 114


State 96

   16 functie: TIP ID . '(' lista_param ')' '{' list '}'
   17        | TIP ID . '(' ')' '{' list '}'
   22 declaratiecl: TIP ID .  [';']
   23             | TIP ID . '(' lista_param ')'
   24             | TIP ID . '(' ')'

    '('  shift, and go to state 115

    $default  reduce using rule 22 (declaratiecl)


State 97

   18 clasa: CLASS ID '{' VIS ':' decl_cl fnc '}' .

    $default  reduce using rule 18 (clasa)


State 98

   21 decl_cl: decl_cl declaratiecl ';' .

    $default  reduce using rule 21 (decl_cl)


State 99

   17 functie: TIP ID '(' ')' '{' list '}' .

    $default  reduce using rule 17 (functie)


State 100

   16 functie: TIP ID '(' lista_param ')' '{' list . '}'
   27 list: list . statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34
    '}'    shift, and go to state 116

    statement  go to state 48


State 101

   13 eval_exp: ID '[' NR . ']'

    ']'  shift, and go to state 117


State 102

    9 eval_exp: '(' eval_exp ')' .

    $default  reduce using rule 9 (eval_exp)


State 103

    4 eval_exp: eval_exp . '+' eval_exp
    4         | eval_exp '+' eval_exp .  ['+', '-', '/', ')', ';']
    5         | eval_exp . '-' eval_exp
    6         | eval_exp . '*' eval_exp
    7         | eval_exp . '/' eval_exp
    8         | eval_exp . '%' eval_exp

    '*'  shift, and go to state 86
    '%'  shift, and go to state 87
    '/'  shift, and go to state 88

    '/'       [reduce using rule 4 (eval_exp)]
    $default  reduce using rule 4 (eval_exp)

    Conflict between rule 4 and token '+' resolved as reduce (%left '+').
    Conflict between rule 4 and token '-' resolved as reduce (%left '-').
    Conflict between rule 4 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 4 and token '%' resolved as shift ('+' < '%').


State 104

    4 eval_exp: eval_exp . '+' eval_exp
    5         | eval_exp . '-' eval_exp
    5         | eval_exp '-' eval_exp .  ['+', '-', '/', ')', ';']
    6         | eval_exp . '*' eval_exp
    7         | eval_exp . '/' eval_exp
    8         | eval_exp . '%' eval_exp

    '*'  shift, and go to state 86
    '%'  shift, and go to state 87
    '/'  shift, and go to state 88

    '/'       [reduce using rule 5 (eval_exp)]
    $default  reduce using rule 5 (eval_exp)

    Conflict between rule 5 and token '+' resolved as reduce (%left '+').
    Conflict between rule 5 and token '-' resolved as reduce (%left '-').
    Conflict between rule 5 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 5 and token '%' resolved as shift ('-' < '%').


State 105

    4 eval_exp: eval_exp . '+' eval_exp
    5         | eval_exp . '-' eval_exp
    6         | eval_exp . '*' eval_exp
    6         | eval_exp '*' eval_exp .  ['+', '-', '*', '%', '/', ')', ';']
    7         | eval_exp . '/' eval_exp
    8         | eval_exp . '%' eval_exp

    '/'  shift, and go to state 88

    '/'       [reduce using rule 6 (eval_exp)]
    $default  reduce using rule 6 (eval_exp)

    Conflict between rule 6 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 6 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 6 and token '*' resolved as reduce (%left '*').
    Conflict between rule 6 and token '%' resolved as reduce (%left '%').


State 106

    4 eval_exp: eval_exp . '+' eval_exp
    5         | eval_exp . '-' eval_exp
    6         | eval_exp . '*' eval_exp
    7         | eval_exp . '/' eval_exp
    8         | eval_exp . '%' eval_exp
    8         | eval_exp '%' eval_exp .  ['+', '-', '*', '%', '/', ')', ';']

    '/'  shift, and go to state 88

    '/'       [reduce using rule 8 (eval_exp)]
    $default  reduce using rule 8 (eval_exp)

    Conflict between rule 8 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 8 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 8 and token '*' resolved as reduce (%left '*').
    Conflict between rule 8 and token '%' resolved as reduce (%left '%').


State 107

    4 eval_exp: eval_exp . '+' eval_exp
    5         | eval_exp . '-' eval_exp
    6         | eval_exp . '*' eval_exp
    7         | eval_exp . '/' eval_exp
    7         | eval_exp '/' eval_exp .  ['+', '-', '*', '%', '/', ')', ';']
    8         | eval_exp . '%' eval_exp

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '%'  shift, and go to state 87
    '/'  shift, and go to state 88

    '+'       [reduce using rule 7 (eval_exp)]
    '-'       [reduce using rule 7 (eval_exp)]
    '*'       [reduce using rule 7 (eval_exp)]
    '%'       [reduce using rule 7 (eval_exp)]
    '/'       [reduce using rule 7 (eval_exp)]
    $default  reduce using rule 7 (eval_exp)


State 108

   52 lista_apel: lista_apel ',' NR .

    $default  reduce using rule 52 (lista_apel)


State 109

   30 operatii_binare: ID OP_BIN ID .

    $default  reduce using rule 30 (operatii_binare)


State 110

   26 list: . statement ';'
   27     | . list statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   44          | IF '(' bool ')' '{' . list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34

    list       go to state 118
    statement  go to state 36


State 111

   26 list: . statement ';'
   27     | . list statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   45          | WHILE '(' bool ')' '{' . list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34

    list       go to state 119
    statement  go to state 36


State 112

   46 statement: FOR '(' ID ASSIGN ID . ';' operatii_binare ';' operatii ')' '{' list '}'

    ';'  shift, and go to state 120


State 113

   24 declaratiecl: TIP ID '(' ')' .

    $default  reduce using rule 24 (declaratiecl)


State 114

   15 lista_param: lista_param . ',' TIP ID
   23 declaratiecl: TIP ID '(' lista_param . ')'

    ')'  shift, and go to state 121
    ','  shift, and go to state 27


State 115

   14 lista_param: . TIP ID
   15            | . lista_param ',' TIP ID
   16 functie: TIP ID '(' . lista_param ')' '{' list '}'
   17        | TIP ID '(' . ')' '{' list '}'
   23 declaratiecl: TIP ID '(' . lista_param ')'
   24             | TIP ID '(' . ')'

    TIP  shift, and go to state 17
    ')'  shift, and go to state 122

    lista_param  go to state 123


State 116

   16 functie: TIP ID '(' lista_param ')' '{' list '}' .

    $default  reduce using rule 16 (functie)


State 117

   13 eval_exp: ID '[' NR ']' .

    $default  reduce using rule 13 (eval_exp)


State 118

   27 list: list . statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   44          | IF '(' bool ')' '{' list . '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34
    '}'    shift, and go to state 124

    statement  go to state 48


State 119

   27 list: list . statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   45          | WHILE '(' bool ')' '{' list . '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34
    '}'    shift, and go to state 125

    statement  go to state 48


State 120

   30 operatii_binare: . ID OP_BIN ID
   46 statement: FOR '(' ID ASSIGN ID ';' . operatii_binare ';' operatii ')' '{' list '}'

    ID  shift, and go to state 66

    operatii_binare  go to state 126


State 121

   23 declaratiecl: TIP ID '(' lista_param ')' .

    $default  reduce using rule 23 (declaratiecl)


State 122

   17 functie: TIP ID '(' ')' . '{' list '}'
   24 declaratiecl: TIP ID '(' ')' .  [';']

    '{'  shift, and go to state 54

    $default  reduce using rule 24 (declaratiecl)


State 123

   15 lista_param: lista_param . ',' TIP ID
   16 functie: TIP ID '(' lista_param . ')' '{' list '}'
   23 declaratiecl: TIP ID '(' lista_param . ')'

    ')'  shift, and go to state 127
    ','  shift, and go to state 27


State 124

   44 statement: IF '(' bool ')' '{' list '}' .

    $default  reduce using rule 44 (statement)


State 125

   45 statement: WHILE '(' bool ')' '{' list '}' .

    $default  reduce using rule 45 (statement)


State 126

   46 statement: FOR '(' ID ASSIGN ID ';' operatii_binare . ';' operatii ')' '{' list '}'

    ';'  shift, and go to state 128


State 127

   16 functie: TIP ID '(' lista_param ')' . '{' list '}'
   23 declaratiecl: TIP ID '(' lista_param ')' .  [';']

    '{'  shift, and go to state 80

    $default  reduce using rule 23 (declaratiecl)


State 128

   31 operatii: . ID OP ID
   32         | . ID OP NR
   33         | . NR OP ID
   34         | . NR OP NR
   35         | . ID OP operatii
   36         | . NR OP operatii
   46 statement: FOR '(' ID ASSIGN ID ';' operatii_binare ';' . operatii ')' '{' list '}'

    ID  shift, and go to state 129
    NR  shift, and go to state 130

    operatii  go to state 131


State 129

   31 operatii: ID . OP ID
   32         | ID . OP NR
   35         | ID . OP operatii

    OP  shift, and go to state 132


State 130

   33 operatii: NR . OP ID
   34         | NR . OP NR
   36         | NR . OP operatii

    OP  shift, and go to state 133


State 131

   46 statement: FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii . ')' '{' list '}'

    ')'  shift, and go to state 134


State 132

   31 operatii: . ID OP ID
   31         | ID OP . ID
   32         | . ID OP NR
   32         | ID OP . NR
   33         | . NR OP ID
   34         | . NR OP NR
   35         | . ID OP operatii
   35         | ID OP . operatii
   36         | . NR OP operatii

    ID  shift, and go to state 135
    NR  shift, and go to state 136

    operatii  go to state 137


State 133

   31 operatii: . ID OP ID
   32         | . ID OP NR
   33         | . NR OP ID
   33         | NR OP . ID
   34         | . NR OP NR
   34         | NR OP . NR
   35         | . ID OP operatii
   36         | . NR OP operatii
   36         | NR OP . operatii

    ID  shift, and go to state 138
    NR  shift, and go to state 139

    operatii  go to state 140


State 134

   46 statement: FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' . '{' list '}'

    '{'  shift, and go to state 141


State 135

   31 operatii: ID . OP ID
   31         | ID OP ID .  [')']
   32         | ID . OP NR
   35         | ID . OP operatii

    OP  shift, and go to state 132

    $default  reduce using rule 31 (operatii)


State 136

   32 operatii: ID OP NR .  [')']
   33         | NR . OP ID
   34         | NR . OP NR
   36         | NR . OP operatii

    OP  shift, and go to state 133

    $default  reduce using rule 32 (operatii)


State 137

   35 operatii: ID OP operatii .

    $default  reduce using rule 35 (operatii)


State 138

   31 operatii: ID . OP ID
   32         | ID . OP NR
   33         | NR OP ID .  [')']
   35         | ID . OP operatii

    OP  shift, and go to state 132

    $default  reduce using rule 33 (operatii)


State 139

   33 operatii: NR . OP ID
   34         | NR . OP NR
   34         | NR OP NR .  [')']
   36         | NR . OP operatii

    OP  shift, and go to state 133

    $default  reduce using rule 34 (operatii)


State 140

   36 operatii: NR OP operatii .

    $default  reduce using rule 36 (operatii)


State 141

   26 list: . statement ';'
   27     | . list statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   46          | FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' . list '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34

    list       go to state 142
    statement  go to state 36


State 142

   27 list: list . statement ';'
   42 statement: . ID ASSIGN eval_exp
   43          | . ID '(' lista_apel ')'
   44          | . IF '(' bool ')' '{' list '}'
   45          | . WHILE '(' bool ')' '{' list '}'
   46          | . FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}'
   46          | FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list . '}'
   47          | . TIP ID

    ID     shift, and go to state 30
    TIP    shift, and go to state 31
    IF     shift, and go to state 32
    WHILE  shift, and go to state 33
    FOR    shift, and go to state 34
    '}'    shift, and go to state 143

    statement  go to state 48


State 143

   46 statement: FOR '(' ID ASSIGN ID ';' operatii_binare ';' operatii ')' '{' list '}' .

    $default  reduce using rule 46 (statement)
